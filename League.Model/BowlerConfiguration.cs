// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace League.Model
{

    // hba_bowler
    [System.CodeDom.Compiler.GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.19.1.0")]
    public class BowlerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Bowler>
    {
        public BowlerConfiguration()
            : this("dbo")
        {
        }
 
        public BowlerConfiguration(string schema)
        {
            ToTable(schema + ".hba_bowler");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.BowlerName).HasColumnName("bowler_name").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(30);
            Property(x => x.Address).HasColumnName("address").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(255);
            Property(x => x.Phone).HasColumnName("phone").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.PrivacyFlag).HasColumnName("privacy_flag").IsRequired().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
            Property(x => x.ActiveFlag).HasColumnName("active_flag").IsRequired().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
            Property(x => x.Gender).HasColumnName("gender").IsRequired().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
            Property(x => x.TeamId).HasColumnName("team_id").IsRequired().HasColumnType("int");
            Property(x => x.Position).HasColumnName("position").IsRequired().HasColumnType("int");
            Property(x => x.Email).HasColumnName("email").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(255);

            // Foreign keys
            HasRequired(a => a.Team).WithMany(b => b.Bowlers).HasForeignKey(c => c.TeamId); // hba_bowler_fk1
        }
    }

}
// </auto-generated>
