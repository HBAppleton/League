// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace League.Model
{

    // hba_score_sheet
    [System.CodeDom.Compiler.GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.19.1.0")]
    public class ScoresheetConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Scoresheet>
    {
        public ScoresheetConfiguration()
            : this("dbo")
        {
        }
 
        public ScoresheetConfiguration(string schema)
        {
            ToTable(schema + ".hba_score_sheet");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.BowlerId).HasColumnName("bowler_id").IsRequired().HasColumnType("int");
            Property(x => x.DrawId).HasColumnName("draw_id").IsRequired().HasColumnType("int");
            Property(x => x.BlindScore).HasColumnName("blind_score").IsRequired().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(1);
            Property(x => x.Handicap).HasColumnName("handicap").IsRequired().HasColumnType("int");
            Property(x => x.Game1).HasColumnName("game_1").IsRequired().HasColumnType("int");
            Property(x => x.Game2).HasColumnName("game_2").IsRequired().HasColumnType("int");
            Property(x => x.Game3).HasColumnName("game_3").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.Bowler).WithMany(b => b.Scoresheets).HasForeignKey(c => c.BowlerId); // hba_score_sheet_fk1
            HasRequired(a => a.Draw).WithMany(b => b.Scoresheets).HasForeignKey(c => c.DrawId); // hba_score_sheet_fk2
        }
    }

}
// </auto-generated>
