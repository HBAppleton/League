// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace League.Model
{

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.19.1.0")]
    public class MyDbContext : System.Data.Entity.DbContext, IMyDbContext
    {
        public System.Data.Entity.DbSet<Average> Averages { get; set; } // hba_averages
        public System.Data.Entity.DbSet<Bowler> Bowlers { get; set; } // hba_bowler
        public System.Data.Entity.DbSet<Bowlernote> Bowlernotes { get; set; } // hba_bowler_note
        public System.Data.Entity.DbSet<Draw> Draws { get; set; } // hba_draw
        public System.Data.Entity.DbSet<Scoresheet> Scoresheets { get; set; } // hba_score_sheet
        public System.Data.Entity.DbSet<Team> Teams { get; set; } // hba_team
        public System.Data.Entity.DbSet<Teamnote> Teamnotes { get; set; } // hba_team_note
        public System.Data.Entity.DbSet<Vindividualgame> Vindividualgames { get; set; } // hba_v_individual_game
        public System.Data.Entity.DbSet<VRollingAverage> VRollingAverages { get; set; } // hba_v_RollingAverage
        public System.Data.Entity.DbSet<Vweek> Vweeks { get; set; } // hba_v_week
        public System.Data.Entity.DbSet<Week> Weeks { get; set; } // hba_week
        
        static MyDbContext()
        {
            System.Data.Entity.Database.SetInitializer<MyDbContext>(null);
        }

        public MyDbContext()
            : base("Name=MyDbContext")
        {
        }

        public MyDbContext(string connectionString)
            : base(connectionString)
        {
        }

        public MyDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public MyDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public MyDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AverageConfiguration());
            modelBuilder.Configurations.Add(new BowlerConfiguration());
            modelBuilder.Configurations.Add(new BowlernoteConfiguration());
            modelBuilder.Configurations.Add(new DrawConfiguration());
            modelBuilder.Configurations.Add(new ScoresheetConfiguration());
            modelBuilder.Configurations.Add(new TeamConfiguration());
            modelBuilder.Configurations.Add(new TeamnoteConfiguration());
            modelBuilder.Configurations.Add(new VindividualgameConfiguration());
            modelBuilder.Configurations.Add(new VRollingAverageConfiguration());
            modelBuilder.Configurations.Add(new VweekConfiguration());
            modelBuilder.Configurations.Add(new WeekConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AverageConfiguration(schema));
            modelBuilder.Configurations.Add(new BowlerConfiguration(schema));
            modelBuilder.Configurations.Add(new BowlernoteConfiguration(schema));
            modelBuilder.Configurations.Add(new DrawConfiguration(schema));
            modelBuilder.Configurations.Add(new ScoresheetConfiguration(schema));
            modelBuilder.Configurations.Add(new TeamConfiguration(schema));
            modelBuilder.Configurations.Add(new TeamnoteConfiguration(schema));
            modelBuilder.Configurations.Add(new VindividualgameConfiguration(schema));
            modelBuilder.Configurations.Add(new VRollingAverageConfiguration(schema));
            modelBuilder.Configurations.Add(new VweekConfiguration(schema));
            modelBuilder.Configurations.Add(new WeekConfiguration(schema));
            return modelBuilder;
        }
        
        // Stored Procedures
        public System.Collections.Generic.List<HbaSAveragesAuditReturnModel> HbaSAveragesAudit(int? pWeekId)
        {
            int procResult;
            return HbaSAveragesAudit(pWeekId, out procResult);
        }

        public System.Collections.Generic.List<HbaSAveragesAuditReturnModel> HbaSAveragesAudit(int? pWeekId, out int procResult)
        {
            var pWeekIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@p_week_id", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = pWeekId.GetValueOrDefault(), Precision = 10, Scale = 0 };
            if (!pWeekId.HasValue)
                pWeekIdParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
            var procResultData = Database.SqlQuery<HbaSAveragesAuditReturnModel>("EXEC @procResult = [dbo].[hba_s_averages_audit] @p_week_id", pWeekIdParam, procResultParam).ToList();

            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public System.Collections.Generic.List<HbaSEoyCertificateReturnModel> HbaSEoyCertificate(int? pSeason)
        {
            int procResult;
            return HbaSEoyCertificate(pSeason, out procResult);
        }

        public System.Collections.Generic.List<HbaSEoyCertificateReturnModel> HbaSEoyCertificate(int? pSeason, out int procResult)
        {
            var pSeasonParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@p_season", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = pSeason.GetValueOrDefault(), Precision = 10, Scale = 0 };
            if (!pSeason.HasValue)
                pSeasonParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
            var procResultData = Database.SqlQuery<HbaSEoyCertificateReturnModel>("EXEC @procResult = [dbo].[hba_s_eoy_certificate] @p_season", pSeasonParam, procResultParam).ToList();

            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public System.Collections.Generic.List<HbaSRoundWeekIdsReturnModel> HbaSRoundWeekIds(int? pWeekId)
        {
            int procResult;
            return HbaSRoundWeekIds(pWeekId, out procResult);
        }

        public System.Collections.Generic.List<HbaSRoundWeekIdsReturnModel> HbaSRoundWeekIds(int? pWeekId, out int procResult)
        {
            var pWeekIdParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@p_week_id", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = pWeekId.GetValueOrDefault(), Precision = 10, Scale = 0 };
            if (!pWeekId.HasValue)
                pWeekIdParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
            var procResultData = Database.SqlQuery<HbaSRoundWeekIdsReturnModel>("EXEC @procResult = [dbo].[hba_s_round_week_ids] @p_week_id", pWeekIdParam, procResultParam).ToList();

            procResult = (int) procResultParam.Value;
            return procResultData;
        }

        public System.Collections.Generic.List<HbaSSeasonAttendanceReturnModel> HbaSSeasonAttendance(int? pSeason)
        {
            int procResult;
            return HbaSSeasonAttendance(pSeason, out procResult);
        }

        public System.Collections.Generic.List<HbaSSeasonAttendanceReturnModel> HbaSSeasonAttendance(int? pSeason, out int procResult)
        {
            var pSeasonParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@p_season", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Input, Value = pSeason.GetValueOrDefault(), Precision = 10, Scale = 0 };
            if (!pSeason.HasValue)
                pSeasonParam.Value = System.DBNull.Value;

            var procResultParam = new System.Data.SqlClient.SqlParameter { ParameterName = "@procResult", SqlDbType = System.Data.SqlDbType.Int, Direction = System.Data.ParameterDirection.Output };
            var procResultData = Database.SqlQuery<HbaSSeasonAttendanceReturnModel>("EXEC @procResult = [dbo].[hba_s_season_attendance] @p_season", pSeasonParam, procResultParam).ToList();

            procResult = (int) procResultParam.Value;
            return procResultData;
        }

    }
}
// </auto-generated>
