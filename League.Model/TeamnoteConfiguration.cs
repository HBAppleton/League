// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace League.Model
{

    // hba_team_note
    [System.CodeDom.Compiler.GeneratedCodeAttribute("EF.Reverse.POCO.Generator", "2.19.1.0")]
    public class TeamnoteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Teamnote>
    {
        public TeamnoteConfiguration()
            : this("dbo")
        {
        }
 
        public TeamnoteConfiguration(string schema)
        {
            ToTable(schema + ".hba_team_note");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName("id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TeamId).HasColumnName("team_id").IsRequired().HasColumnType("int");
            Property(x => x.Season).HasColumnName("season").IsRequired().HasColumnType("int");
            Property(x => x.Note).HasColumnName("note").IsRequired().HasColumnType("nvarchar");
            Property(x => x.Rank).HasColumnName("rank").IsOptional().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.Team).WithMany(b => b.Teamnotes).HasForeignKey(c => c.TeamId); // hba_team_note_fk1
        }
    }

}
// </auto-generated>
